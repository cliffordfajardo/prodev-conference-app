services:
  backend:
    build: backend
    depends_on:
      - postgres
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: conference_app
      PGUSER: conference_app_user
      PGPASSWORD: banana9342
      PGAPPNAME: conference-go
      PORT: 8080
      JWT_SECRET: 342sdw1xljk*m^lkasjmdflkj290=113x7yosxs7923dckl3exq
    ports:
      - "8080:8080"
    command: npm run dev
    volumes:
      - .:/usr/src/app

  postgres:
    image: postgres:10.4
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: conference_app_user
      POSTGRES_PASSWORD: banana9342
      POSTGRES_DB: conference_app
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  web:
    build: frontend
    depends_on:
      - gateway
    environment:
      REACT_APP_API_URL: http://localhost:80/api
    ports:
     - "3000:3000"
    command: npm run start

  gateway:
    build: gateway
    ports:
      - "80:80"
    depends_on:
      - authorizor
      - backend


  authorizor:
    build: authorizor
    expose:
      - "8081"
    depends_on:
      - authdb
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: authentication
      PGUSER: conference_auth_user
      PGPASSWORD: banana9342
      PGAPPNAME: conference-go-auth
      PORT: 8081
      JWT_SECRET: 3asdf42sdw1xljk*m^lkasjmdflkj290=113x7yosxs7923dckl3exq

  authdb:
    image: postgres:10.4
    ports:
      - "35434:5432"
    environment:
      POSTGRES_USER: conference_auth_user
      POSTGRES_PASSWORD: banana9342
      POSTGRES_DB: authentication
    volumes:
      - ./postgres-data:/var/lib/postgresql/data